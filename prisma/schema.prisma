// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstname String
  lastname  String
  username  String    @unique
  password  String
  email     String    @unique
  phone     String?
  Address   Address[]
}

model Address {
  id       Int        @id @default(autoincrement())
  userId   Int
  city     String
  street   String
  zipcode  String
  user     User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Shipment Shipment[]
}

model Shipment {
  id          Int       @id @default(autoincrement())
  orderitemId Int
  addressId   Int
  status      String
  address     Address   @relation(fields: [addressId], references: [id])
  orderitem   Orderitem @relation(fields: [orderitemId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Orderitem {
  id        Int        @id @default(autoincrement())
  productId Int
  cartId    Int
  subtotal  String
  Shipment  Shipment[]
  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Payment   Payment[]
  cart      Cart       @relation(fields: [cartId], references: [id])
}

model Product {
  id            Int         @id @default(autoincrement())
  productname   String
  price         Float
  detail        String
  stockquantity Int
  productcode   String
  Orderitem     Orderitem[]
}

model Payment {
  id            Int       @id @default(autoincrement())
  orderitemId   Int
  paymentmedtod String
  paymentdate   DateTime  @default(now())
  grandtotal    Float
  orderitem     Orderitem @relation(fields: [orderitemId], references: [id])
}

model Cart {
  id       Int @id @default(autoincrement())
  quantity Int
  Orderitem Orderitem[]
}
